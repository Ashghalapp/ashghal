import 'dart:convert';

import 'package:ashghal_app_frontend/core_api/errors/error_strings.dart';
import 'package:dio/dio.dart';

import 'api_constant.dart';
import 'api_response_model.dart';
import 'public_interceptor.dart';

class DioService {
  late Dio _dio;
  DioService() {
    _dio = Dio(BaseOptions(
      baseUrl: ApiConstants.baseUrl,
      connectTimeout: const Duration(seconds: 60),
      receiveTimeout: const Duration(seconds: 240),
      sendTimeout: const Duration(seconds: 240),
      receiveDataWhenStatusError: true,
    ));
    _dio.interceptors.add(PublicInterceptor());
    _dio.interceptors.add(LogInterceptor(responseBody: true));
  }

  // Future<ApiResponseModel>
  Future<ApiResponseModel> get(String path) async {
    print("?????????????????Before send request??????????????????????");
    Response response = await _dio.get(path);
    print("?????????????????after send request??????????????????????");
    if (response.statusCode == 200) {
      print("????????????????????Success status request???????????????????");
      ApiResponseModel responseModel = ApiResponseModel.fromJson(response.data);
      return responseModel;
    } else {
      return ApiResponseModel(
          status: false,
          message: response.statusMessage ?? ErrorString.SERVER_ERROR);
    }
  }

  Future<ApiResponseModel> post(String path, Object? data) async {
    // print("???????????????????????????????????????");
    Response response = await _dio.post(path, data: data);
    // print("???????///////////?????????????????????????");
    print("?????????????????${response.statusCode}??${response.statusMessage}");
    if (response.statusCode == 200) {
      // print("???????????????????????????????????????");
      ApiResponseModel responseModel = ApiResponseModel.fromJson(response.data);
      return responseModel;
    } else {
      return ApiResponseModel(
          status: false,
          message: response.statusMessage ?? ErrorString.SERVER_ERROR);
    }
  }

  Future<ApiResponseModel> uploadMultimedia(String path, Object? data,
      {void Function(int, int)? onSendProgress,
      CancelToken? cancelToken}) async {
    // print("???????????????????????????????????????");
    Response response = await _dio.post(path,
        data: data, onSendProgress: onSendProgress, cancelToken: cancelToken);
    // print("???????///////////?????????????????????????");
    print("?????????????????${response.statusCode}??${response.statusMessage}");
    if (response.statusCode == 200) {
      // print("???????????????????????????????????????");
      ApiResponseModel responseModel = ApiResponseModel.fromJson(response.data);
      return responseModel;
    } else {
      return ApiResponseModel(
          status: false,
          message: response.statusMessage ?? ErrorString.SERVER_ERROR);
    }
  }

  Future<Response> download({
    required String url,
    required String savePath,
    void Function(int, int)? onReceiveProgress,
    CancelToken? cancelToken,
  }) async {
    // print("???????????????????????????????????????");
    return await _dio.download(
      url,
      savePath,
      onReceiveProgress: onReceiveProgress,
      cancelToken: cancelToken,
    );
    // print("???????///////////?????????????????????????");
    // print("?????????????????${response.statusCode}??${response.statusMessage}");
    // if (response.statusCode == 200) {
    //   // print("???????????????????????????????????????");
    //   ApiResponseModel responseModel = ApiResponseModel.fromJson(response.data);
    //   return true;
    // } else {
    // response.
    // return false;
    // }
  }

  Future<dynamic> autherizeUserOnChannel(
      {required String socketId, required String channelName}) async {
    Response response = await _dio.post(
      ApiConstants.channelsAutherizingUrl,
      data: {'socket_id': socketId, 'channel_name': channelName},
      // options: Options(
      //   headers: {
      //     'Authorization': 'Bearer H1yyza0I8r87vRAJXWn3H84EN3SjiEqn3QePFV2q',
      //   },
      // ),
    );
    print("?????????????????${response.statusCode}??${response.statusMessage}");
    print("?????????????????${response.data}??${response.statusMessage}");
    // var json = jsonDecode(response.data);
    return response.data;
    // if (response.statusCode == 200) {
    //   var json = jsonDecode(response.data);
    //   return json;
    // } else {
    //   throw Exception("Failed to authenticate the user in such a channel");
    // }
  }

  Future<ApiResponseModel> delete(String path) async {
    Response response = await _dio.delete(path);
    if (response.statusCode == 200) {
      print("???????????????????????????????????????");
      ApiResponseModel responseModel = ApiResponseModel.fromJson(response.data);
      return responseModel;
    } else {
      return ApiResponseModel(
          status: false,
          message: response.statusMessage ?? ErrorString.SERVER_ERROR);
    }
  }

  Future<Response> getUsers() async {
    return await _dio.get("/user/get");
  }

  Future<Response> getSpecificUser() async {
    return await _dio.get("/user/get/5");
  }
}
